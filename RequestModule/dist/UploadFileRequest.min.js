function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function _defineProperties(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}function _createClass(a,b,c){return b&&_defineProperties(a.prototype,b),c&&_defineProperties(a,c),a}function _defineProperty(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}var UploadFileRequest=function(){function a(b){var c=b.url,d=b.file,e=b.onSuccess,f=b.onProgress,g=b.onError,h=b.authentication,i=b.formKey,j=void 0===i?a.defaults.formKey:i,k=b.AuthManagerBridge,l=void 0===k?a.defaults.AuthManagerBridge:k;_classCallCheck(this,a),_defineProperty(this,"http",null),_defineProperty(this,"data",null),this.url=c,this.file=d,this.onSuccess=e,this.onProgress=f,this.onError=g,this.authentication=void 0===h||h,this.AuthManagerBridge=l,this.formKey=j,this.createRequest(),this.createData(),this.uploadFile()}return _createClass(a,[{key:"uploadFile",value:function(){if(this.http.open("POST",this.url,!0),this.authentication){var a=this.AuthManagerBridge.getAuthHeaderProperty();this.http.setRequestHeader(a.key,a.value)}this.http.send(this.data)}},{key:"createRequest",value:function(){this.http=new XMLHttpRequest,this.registerOnReadyStateChange(),this.registerOnProgressUplaod()}},{key:"createData",value:function(){this.data=new FormData,this.data.append(this.formKey,this.file)}},{key:"registerOnReadyStateChange",value:function(){var a=this;this.http.onreadystatechange=function(){4==a.http.readyState&&200==a.http.status?a.registerOnSuccessRequest():4==a.http.readyState&&200!=a.http.status&&a.registerOnErrorRequest()}}},{key:"registerOnSuccessRequest",value:function(){this.http.getResponseHeader("Content-Type").indexOf("json")&&this.onSuccess(JSON.parse(this.http.responseText))}},{key:"registerOnErrorRequest",value:function(){this.http.getResponseHeader("Content-Type").indexOf("json")&&this.onError(JSON.parse(this.http.responseText))}},{key:"registerOnProgressUplaod",value:function(){var a=this;this.http.upload.addEventListener("progress",function(b){var c=Math.round;if(b.lengthComputable){var d=c(100*(b.loaded/b.total));a.onProgress(d,b.loaded,b.total,b)}},!1)}}]),a}();UploadFileRequest.defaults={AuthManagerBridge:void 0,formKey:void 0};export default UploadFileRequest;
